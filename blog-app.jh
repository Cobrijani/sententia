DEFAULT_MIN_LENGTH = 1
DEFAULT_MAX_LENGTH = 42
DEFAULT_MIN_BYTES = 20
DEFAULT_MAX_BYTES = 40
DEFAULT_MIN = 0
DEFAULT_MAX = 41

/**
 * Gateway 
 * @author Stefan Bratic
 */
application {
    config {
        baseName sentway
        applicationType gateway
        serverPort 8080
        buildTool maven
        databaseType sql
        devDatabaseType h2Disk
        prodDatabaseType postgresql
        packageName com.github.cobrijani.sententia
        serviceDiscoveryType eureka
        useSass true
        clientFramework angularX
        authenticationType jwt
        enableHibernateCache true
        clientPackageManager npm
        cacheProvider hazelcast
    }
    entities *
}

/**
 * Article microservice
 * @author Stefan Bratic
 */
application {
    config {
        baseName article
        applicationType microservice
        serverPort 8081
        buildTool maven
        packageName com.github.cobrijani.sententia
        databaseType mongodb
        devDatabaseType mongodb
        prodDatabaseType mongodb
        serviceDiscoveryType eureka
        authenticationType jwt
        cacheProvider hazelcast
        skipClient true
        skipUserManagement true
    }
    entities Article
}


/**
 * Follower microservice
 * @author Stefan Bratic
 */
application {
    config {
        baseName follower
        applicationType microservice
        serverPort 8082
        buildTool maven
        packageName com.github.cobrijani.sententia
        authenticationType jwt
        cacheProvider hazelcast
        databaseType no
        devDatabaseType no
        prodDatabaseType no
        serviceDiscoveryType eureka
        skipClient true
        skipServer true
        skipUserManagement true
    }
    entities Person, Mute, Block, Follow
}


/**
 * An Article written by certain author that contains some kind of content.
 * @author Stefan Bratic
 */
entity Article {
    id String minlength(DEFAULT_MIN_LENGTH) maxlength(DEFAULT_MAX_LENGTH) required
	title String minlength(DEFAULT_MIN_LENGTH) maxlength(DEFAULT_MAX_LENGTH) required
    type Markup
    category String required
    authorId String required
    authorName String required
    created ZonedDateTime
    modified ZonedDateTime
    published ZonedDateTime
    content TextBlob required
    releasedContent TextBlob
    contentHash String required
    releasedContentHash String
}
enum Markup {
    PLAIN, HTML, MARKDOWN
}
microservice Article with article

dto Article with mapstruct
service Article with serviceImpl
paginate Article with pagination


deployment {
  deploymentType kubernetes
  appsFolders [article, follower, sentway]
  dockerRepositoryName "cobrijani"
  serviceDiscoveryType eureka
  kubernetesNamespace sententia
}

deployment {
  deploymentType docker-compose
  appsFolders [article, follower, sentway]
  dockerRepositoryName "cobrijani"
}
